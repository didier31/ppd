/**
 * generated by Xtext 2.10.0
 */
package org.xtext.ppd.ppd.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.ppd.ppd.Content;
import org.xtext.ppd.ppd.HS;
import org.xtext.ppd.ppd.PpdPackage;
import org.xtext.ppd.ppd.SimpleContent;
import org.xtext.ppd.ppd.VS;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Content</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.ppd.ppd.impl.ContentImpl#getVs <em>Vs</em>}</li>
 *   <li>{@link org.xtext.ppd.ppd.impl.ContentImpl#getHs <em>Hs</em>}</li>
 *   <li>{@link org.xtext.ppd.ppd.impl.ContentImpl#getSimpleContent <em>Simple Content</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContentImpl extends MinimalEObjectImpl.Container implements Content
{
  /**
   * The cached value of the '{@link #getVs() <em>Vs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVs()
   * @generated
   * @ordered
   */
  protected VS vs;

  /**
   * The cached value of the '{@link #getHs() <em>Hs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHs()
   * @generated
   * @ordered
   */
  protected HS hs;

  /**
   * The cached value of the '{@link #getSimpleContent() <em>Simple Content</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimpleContent()
   * @generated
   * @ordered
   */
  protected SimpleContent simpleContent;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PpdPackage.Literals.CONTENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VS getVs()
  {
    return vs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVs(VS newVs, NotificationChain msgs)
  {
    VS oldVs = vs;
    vs = newVs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PpdPackage.CONTENT__VS, oldVs, newVs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVs(VS newVs)
  {
    if (newVs != vs)
    {
      NotificationChain msgs = null;
      if (vs != null)
        msgs = ((InternalEObject)vs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PpdPackage.CONTENT__VS, null, msgs);
      if (newVs != null)
        msgs = ((InternalEObject)newVs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PpdPackage.CONTENT__VS, null, msgs);
      msgs = basicSetVs(newVs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PpdPackage.CONTENT__VS, newVs, newVs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HS getHs()
  {
    return hs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetHs(HS newHs, NotificationChain msgs)
  {
    HS oldHs = hs;
    hs = newHs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PpdPackage.CONTENT__HS, oldHs, newHs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHs(HS newHs)
  {
    if (newHs != hs)
    {
      NotificationChain msgs = null;
      if (hs != null)
        msgs = ((InternalEObject)hs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PpdPackage.CONTENT__HS, null, msgs);
      if (newHs != null)
        msgs = ((InternalEObject)newHs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PpdPackage.CONTENT__HS, null, msgs);
      msgs = basicSetHs(newHs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PpdPackage.CONTENT__HS, newHs, newHs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SimpleContent getSimpleContent()
  {
    return simpleContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSimpleContent(SimpleContent newSimpleContent, NotificationChain msgs)
  {
    SimpleContent oldSimpleContent = simpleContent;
    simpleContent = newSimpleContent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PpdPackage.CONTENT__SIMPLE_CONTENT, oldSimpleContent, newSimpleContent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSimpleContent(SimpleContent newSimpleContent)
  {
    if (newSimpleContent != simpleContent)
    {
      NotificationChain msgs = null;
      if (simpleContent != null)
        msgs = ((InternalEObject)simpleContent).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PpdPackage.CONTENT__SIMPLE_CONTENT, null, msgs);
      if (newSimpleContent != null)
        msgs = ((InternalEObject)newSimpleContent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PpdPackage.CONTENT__SIMPLE_CONTENT, null, msgs);
      msgs = basicSetSimpleContent(newSimpleContent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PpdPackage.CONTENT__SIMPLE_CONTENT, newSimpleContent, newSimpleContent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PpdPackage.CONTENT__VS:
        return basicSetVs(null, msgs);
      case PpdPackage.CONTENT__HS:
        return basicSetHs(null, msgs);
      case PpdPackage.CONTENT__SIMPLE_CONTENT:
        return basicSetSimpleContent(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PpdPackage.CONTENT__VS:
        return getVs();
      case PpdPackage.CONTENT__HS:
        return getHs();
      case PpdPackage.CONTENT__SIMPLE_CONTENT:
        return getSimpleContent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PpdPackage.CONTENT__VS:
        setVs((VS)newValue);
        return;
      case PpdPackage.CONTENT__HS:
        setHs((HS)newValue);
        return;
      case PpdPackage.CONTENT__SIMPLE_CONTENT:
        setSimpleContent((SimpleContent)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PpdPackage.CONTENT__VS:
        setVs((VS)null);
        return;
      case PpdPackage.CONTENT__HS:
        setHs((HS)null);
        return;
      case PpdPackage.CONTENT__SIMPLE_CONTENT:
        setSimpleContent((SimpleContent)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PpdPackage.CONTENT__VS:
        return vs != null;
      case PpdPackage.CONTENT__HS:
        return hs != null;
      case PpdPackage.CONTENT__SIMPLE_CONTENT:
        return simpleContent != null;
    }
    return super.eIsSet(featureID);
  }

} //ContentImpl
